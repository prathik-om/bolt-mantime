#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Starting database type generation...${NC}"

# Create types directory if it doesn't exist
mkdir -p src/lib/types

# Backup existing types file if it exists
if [ -f src/lib/database.types.ts ]; then
    echo -e "${YELLOW}Backing up existing types file...${NC}"
    timestamp=$(date +%Y%m%d_%H%M%S)
    cp src/lib/database.types.ts "src/lib/database.types.backup_${timestamp}.ts"
fi

# Check if we're linked to a Supabase project
echo -e "${YELLOW}Checking Supabase project link...${NC}"
if ! supabase status >/dev/null 2>&1; then
    echo -e "${RED}Error: Not linked to a Supabase project.${NC}"
    echo "Please run 'supabase link' first."
    exit 1
fi

# Generate types
echo -e "${YELLOW}Generating types from current schema...${NC}"
if supabase gen types typescript --linked > src/lib/database.types.ts.tmp; then
    # Add header comment to the file
    echo "/**
 * This file was automatically generated by scripts/generate-types.sh
 * DO NOT MODIFY THIS FILE DIRECTLY
 * Generated on: $(date)
 */
" > src/lib/database.types.ts

    # Append the generated types
    cat src/lib/database.types.ts.tmp >> src/lib/database.types.ts
    rm src/lib/database.types.ts.tmp

    echo -e "${GREEN}Successfully generated types!${NC}"
    echo -e "${YELLOW}Location: ${NC}src/lib/database.types.ts"
    
    # Run prettier on the generated file if available
    if command -v prettier >/dev/null 2>&1; then
        echo -e "${YELLOW}Formatting generated types...${NC}"
        prettier --write src/lib/database.types.ts
        echo -e "${GREEN}Formatting complete!${NC}"
    fi
else
    echo -e "${RED}Error generating types${NC}"
    # Restore backup if generation failed
    latest_backup=$(ls -t src/lib/database.types.backup_* 2>/dev/null | head -n1)
    if [ -n "$latest_backup" ]; then
        echo -e "${YELLOW}Restoring from backup: ${NC}$latest_backup"
        cp "$latest_backup" src/lib/database.types.ts
        echo -e "${GREEN}Backup restored!${NC}"
    fi
    exit 1
fi

# Create/update type helpers file
echo -e "${YELLOW}Creating type helpers...${NC}"
cat > src/lib/types/database-helpers.ts << EOL
/**
 * Type helper utilities for database types
 * Generated on: $(date)
 */

import { Database } from '../database.types'

// Type helpers for table rows
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row']
export type TablesInsert<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert']
export type TablesUpdate<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update']

// Type helpers for enums
export type Enums<T extends keyof Database['public']['Enums']> = Database['public']['Enums'][T]

// Common table types
export type Teacher = Tables<'teachers'>
export type TeacherInsert = TablesInsert<'teachers'>
export type TeacherUpdate = TablesUpdate<'teachers'>

export type School = Tables<'schools'>
export type SchoolInsert = TablesInsert<'schools'>
export type SchoolUpdate = TablesUpdate<'schools'>

export type Department = Tables<'departments'>
export type DepartmentInsert = TablesInsert<'departments'>
export type DepartmentUpdate = TablesUpdate<'departments'>

// Add more commonly used types here...
EOL

echo -e "${GREEN}Type generation complete!${NC}"
echo -e "${YELLOW}Don't forget to commit the changes if needed.${NC}" 